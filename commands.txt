## start the image(s)
docker exec -it honeypot_container /bin/sh

## get network IPs
docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)

/honeypot2 - 172.17.0.2
/honeypot_attacker - 172.17.0.4
/honeypot_container - 172.17.0.3


## start the honeypot
su honeypot
cd $HOME/code/modules/
bash start_honeypot.sh 

## observe the log
tail -f /home/honeypot/cowrie/var/log/cowrie/cowrie.log

## attacking the honeypot from another docker or machine
docker exec -it honeypot_attacker /bin/sh
## get honeypot IP
sudo docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(sudo docker ps -aq)

## run a portscan
nmap -v 172.17.0.2 -p 1-5000

## service login examples
ssh root@172.17.0.2 -p 22 
telnet 172.17.0.2 2223
ftp ...

## DoS
gcc synflood.c -o synflood
sudo ./synflood 172.17.0.2 22

## track activiy in the log
ssh root@172.17.0.2 -p 22 
execute commands

## trigger advanced detection
docker exec -it honeypot_container1 /bin/sh
sudo su - cowrie
cd cowrie/iotac_honeypot/modules
### setup IP of remote HP in config.json
bash start_honeypot.sh 

docker exec -it honeypot_container2 /bin/sh
sudo su - cowrie
cd cowrie/iotac_honeypot/modules
### setup IP of remote HP in config.json
bash start_honeypot.sh 

### e.g. execute single port portscan across network
nmap -v 172.17.0.0/24 -p 22

## read the API
curl -k https://172.17.0.2:5000/getall --header "apikey: iotacAPIkey1-s56JkyKbk4WrSBaXt9M99PC9XpGtUKZu9T"

% CRED honeypot user
thisisasecurepasswordforthehoneypotwithmanyletters







